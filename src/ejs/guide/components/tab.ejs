<!DOCTYPE html>
<html lang="ko">
<head>
<%-include('../_templates/_guide.head.ejs', {
	pageJavascript: ''
}) %>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        Tab();
    });
</script>
</head>
<body>
<div id="wrap">
	<div id="guide-list">
		<%-include('../_templates/_guide.header.ejs') %>
		<!-- page-body -->
		<div class="page-body">
			<!-- local-head -->
			<div class="local-head">
				<h2 class="local-subject">
					<span class="local-name">Tab</span>
					<span class="local-desc">콘텐츠를 항목별로 구분하여 표시할 때 사용합니다.</span>
				</h2>
			</div>
			<!-- //local-head -->
			<!-- local-body -->
			<div class="local-body">
				<!-- section -->
				<div class="section">
					<div class="section-head">
						<h4 class="section-subject"><span class="section-name">Tab display</span></h4>
					</div>
					<div class="section-body">
						<div class="subsection">
							<div class="subsection-head">module-a</div>
							<div class="subsection-body">
<!-- highlight-js -->
<pre class="highlight-js"><code class="html">&lt;!-- tab-display --&gt;
&lt;div class="tab-display module-a style-a type-a"&gt;
	&lt;div class="swiper tab-wrap"&gt;
		&lt;ul class="swiper-wrapper tab-list" role="tablist"&gt;
			&lt;li id="tab1" class="swiper-slide tab-item" aria-controls="tab-panel1"&gt;&lt;button role="tab" class="tab-text"&gt;Tab 1&lt;/button&gt;&lt;/li&gt;
			&lt;li id="tab2" class="swiper-slide tab-item" aria-controls="tab-panel2"&gt;&lt;button role="tab" class="tab-text"&gt;Tab 2&lt;/button&gt;&lt;/li&gt;
			&lt;li id="tab3" class="swiper-slide tab-item" aria-controls="tab-panel3"&gt;&lt;button role="tab" class="tab-text"&gt;Tab 3&lt;/button&gt;&lt;/li&gt;
			&lt;li id="tab4" class="swiper-slide tab-item" aria-controls="tab-panel4"&gt;&lt;button role="tab" class="tab-text"&gt;Tab 4&lt;/button&gt;&lt;/li&gt;
		&lt;/ul&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;!-- //tab-display --&gt;</code></pre>
<!-- //highlight-js -->
                                <div class="guide-tab-area">
                                    <div class="tab-display module-a style-a type-a">
                                        <div class="swiper tab-wrap">
                                            <ul class="swiper-wrapper tab-list" role="tablist">
                                                <li id="tab1" class="swiper-slide tab-item" aria-controls="tab-panel1">
                                                    <button role="tab" class="tab-text">Tab 1</button>
                                                </li>
                                                <li id="tab2" class="swiper-slide tab-item" aria-controls="tab-panel2">
                                                    <button role="tab" class="tab-text">Tab 2</button>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
							</div>
						</div>
						<div class="subsection">
							<div class="subsection-head">module-b</div>
							<div class="subsection-body">
<!-- highlight-js -->
<pre class="highlight-js"><code class="html">&lt;!-- tab-display --&gt;
&lt;div class="tab-display module-b style-a type-a"&gt;
	&lt;div class="swiper tab-wrap"&gt;
		&lt;ul class="swiper-wrapper tab-list" role="tablist"&gt;
			&lt;li id="tab1" class="swiper-slide tab-item" aria-controls="tab-panel1"&gt;&lt;button role="tab" class="tab-text"&gt;Tab 1&lt;/button&gt;&lt;/li&gt;
			&lt;li id="tab2" class="swiper-slide tab-item" aria-controls="tab-panel2"&gt;&lt;button role="tab" class="tab-text"&gt;Tab 2&lt;/button&gt;&lt;/li&gt;
			&lt;li id="tab3" class="swiper-slide tab-item" aria-controls="tab-panel3"&gt;&lt;button role="tab" class="tab-text"&gt;Tab 3&lt;/button&gt;&lt;/li&gt;
			&lt;li id="tab4" class="swiper-slide tab-item" aria-controls="tab-panel4"&gt;&lt;button role="tab" class="tab-text"&gt;Tab 4&lt;/button&gt;&lt;/li&gt;
		&lt;/ul&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;!-- //tab-display --&gt;</code></pre>
<!-- //highlight-js -->
                                <div class="guide-tab-area">
                                    <div class="tab-display module-b style-a type-a">
                                        <div class="swiper tab-wrap">
                                            <ul class="swiper-wrapper tab-list" role="tablist">
                                                <li id="tab1" class="swiper-slide tab-item" aria-controls="tab-panel1">
                                                    <button role="tab" class="tab-text">Tab 1</button>
                                                </li>
                                                <li id="tab2" class="swiper-slide tab-item" aria-controls="tab-panel2">
                                                    <button role="tab" class="tab-text">Tab 2</button>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
							</div>
						</div>
					</div>
				</div>
				<!-- //section -->
				<!-- section -->
				<div class="section">
					<div class="section-head">
						<h4 class="section-subject"><span class="section-name">Panel display</span></h4>
					</div>
					<div class="section-body">
						<div class="subsection">
							<div class="subsection-head">module-a</div>
							<div class="subsection-body">
<!-- highlight-js -->
<pre class="highlight-js"><code class="html">&lt;!-- panel-display --&gt;
&lt;div class="panel-display module-a style"&gt;
	&lt;ul class="panel-list"&gt;
		&lt;li id="tab-panel1" class="panel-item" role="tabpanel"&gt;&lt;div class="panel-wrap"&gt;Panel 1&lt;/li&gt;&lt;/div&gt;
		&lt;li id="tab-panel2" class="panel-item" role="tabpanel"&gt;&lt;div class="panel-wrap"&gt;Panel 2&lt;/li&gt;&lt;/div&gt;
		&lt;li id="tab-panel3" class="panel-item" role="tabpanel"&gt;&lt;div class="panel-wrap"&gt;Panel 3&lt;/li&gt;&lt;/div&gt;
		&lt;li id="tab-panel4" class="panel-item" role="tabpanel"&gt;&lt;div class="panel-wrap"&gt;Panel 4&lt;/li&gt;&lt;/div&gt;
	&lt;/ul&gt;
&lt;/div&gt;
&lt;!-- //panel-display --&gt;</code></pre>
											<!-- //highlight-js -->
                                <div class="guide-tab-panel-area">
                                    <div class="panel-display module-a style">
                                        <div class="panel-list">
                                            <div id="tab-panel1" class="panel-item" role="tabpanel">
                                                <div class="panel-wrap">
                                                    <span>Panel 1</span>
                                                </div>
                                            </div>
                                            <div id="tab-panel2" class="panel-item" role="tabpanel">
                                                <div class="panel-wrap">
                                                    <span>Panel 2</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
							</div>
						</div>
					</div>
				</div>
				<!-- //section -->
			</div>
			<!-- //local-body -->
		</div>
		<!-- //page-body -->
		<%-include('../_templates/_guide.footer.ejs') %>
	</div>
</div>
<script>
	// tab
function tab() {
    console.log('hi')

    const tabDisplay = document.querySelectorAll(".tab-display")
    tabDisplay.forEach(tab => {
        const firstTab = tab.querySelector(".tab-item:first-child")
        firstTab.classList.add("active")
        firstTab.querySelector(".tab-text").setAttribute("aria-selected", "true")

        const tabList = tab.querySelector(".tab-list")
        tabList.addEventListener("keydown", function(e) {
            e = event || window.event;
            let keycode = e.keyCode || e.which;

            if(!e.shiftKey && keycode === 9) {
                let tabItem = this.querySelectorAll(".tab-item");
                tabItem.forEach(item => {
                    if(item.classList.contains("active")) {
                        const button = item.querySelector(".tab-text");
                        button.setAttribute("tabindex", "0");
                        button.setAttribute("aria-selected", "true")
                    } else {
                        const button = item.querySelector(".tab-text");
                        button.setAttribute("tabindex", "-1");
                        button.setAttribute("aria-selected", "false");
                    }
                });

                let siblingTabPanels = document.querySelectorAll(".panel-item.hidden");
                siblingTabPanels.forEach(panel => {
                    // panel.tabIndex = "-1";
                });
            }
        })
        const tabButton = tab.querySelectorAll(".tab-text")
        tabButton.forEach(button => {
            button.addEventListener("keydown", function(e) {
                e = event || window.event;
                let keycode = e.keyCode || e.which;

                switch(keycode) {
                    case 37:
                        if(this.closest('.tab-item').previousElementSibling) {
                            this.setAttribute("tabindex", "-1")
                            this.closest('.tab-item').previousElementSibling.querySelector('.tab-text').setAttribute("tabindex", "0")
                            this.closest('.tab-item').previousElementSibling.querySelector('.tab-text').focus();
                        }
                        break;
                    case 39:
                        if(this.closest('.tab-item').nextElementSibling) {
                            this.setAttribute("tabindex", "-1")
                            this.closest('.tab-item').nextElementSibling.querySelector('.tab-text').setAttribute("tabindex", "0")
                            this.closest('.tab-item').nextElementSibling.querySelector('.tab-text').focus();
                        }
                        break;
                    case 32:
                    case 13:
                        if(this) {
                            tabButton.forEach(button => {
                                button.setAttribute("aria-selected", "false");
                            });
                            this.setAttribute("aria-selected", "true");
                        }
                        break;
                }
            })
        });
    });

    const panelDisplay = document.querySelectorAll(".panel-display")
    panelDisplay.forEach(panel => {
        const panelItems = panel.querySelectorAll(".panel-item")
        panelItems.forEach((item, i) => {
            i != 0 ? item.classList.add("hidden") : ""
        });
    });
    tabDisplay.forEach((tab, tabDisplayIndex) => {
        const tabItems = tab.querySelectorAll(".tab-item")
        tabItems.forEach((item, tabIndex) => {
            const button = item.querySelector(".tab-text")
            button.addEventListener("click", () => {
                const curTab = button.closest(".tab-item")
                tabItems.forEach(item => {
                    item.classList.remove("active")
                    item.querySelector('.tab-text').setAttribute("tabindex", "-1")
                    item.querySelector('.tab-text').setAttribute("aria-selected", "false")
                });
                curTab.classList.add("active")
                button.setAttribute("tabindex", "0")
                button.setAttribute("aria-selected", "true")

                panelDisplay.forEach((panelDisplay, panelDisplayIndex) => {
                    if(tabDisplayIndex == panelDisplayIndex) {
                        const panelItems = panelDisplay.querySelectorAll(".panel-item")
                        panelItems.forEach((item, panelIndex) => {
                            item.classList.add("hidden")
                            tabIndex == panelIndex ? item.classList.remove("hidden") : ""
                        });
                    }
                });
            })
        });
    });

    new Swiper(".tab-wrap", {
        slidesPerView: "auto",
        freeMode: true,
    });

    // jQuery Scroll Event
    $(function () {
        var $tabDisplay = $(".tab-display.module-b");

        // 요소가 존재할 때만 실행
        if ($tabDisplay.length) {
            var tabDisplayOffset = $tabDisplay.offset().top - 64;
            var placeholder = $("<div>").height($tabDisplay.outerHeight()).hide();
            $tabDisplay.before(placeholder);

            $(window).scroll(function () {
                var scrollTop = $(this).scrollTop();

                if (tabDisplayOffset <= scrollTop) {
                    $tabDisplay.addClass("fixed");
                    placeholder.show();
                    $("#header").css({ "box-shadow": "none" });
                } else {
                    $tabDisplay.removeClass("fixed");
                    placeholder.hide();
                    $("#header").css({ "box-shadow": "0px 4px 28px 0px rgba(0, 0, 0, 0.04)" });
                }
            });
        }
    });
}
</script>
</body>
</html>